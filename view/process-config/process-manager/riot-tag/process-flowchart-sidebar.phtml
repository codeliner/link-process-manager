<div class="row">
    <div class="col-md-11 col-lg-offset-1">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#" class="process-tab" onclick="{ toggleActive }"><?php echo $this->translate('Workflow') ?></a></li>
            <li ><a href="#" class="elements-tab" onclick="{ toggleActive }"><?php echo $this->translate('Elements') ?></a></li>
        </ul>
        <div if="{ isProcessTabActive() }">
            <p></p>
            <button id="pm-publish-workflow" type="button" class="btn btn-default"><?php echo $this->translate('Publish Workflow')?></button>
            <p></p>
            <div class="accordion-group">
                <div class="accordion-heading">
                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#process-log-accordion" href="#process-log-collapse-log">
                        <h4><?php echo $this->translate('Log')?></h4>
                    </a>
                </div>
                <div id="process-log-collapse-log" class="accordion-body collapse">
                    <div class="accordion-inner">
                        <process-log-list start_message="{ start_message }" app="{ context.app }"></process-log-list>
                    </div>
                </div>
            </div>
        </div>
        <div if="{ isElementsTabActive() }">
            <p></p>
            <div class="accordion" id="process-elements-accordion">
                <div class="accordion-group">
                    <div class="accordion-heading">
                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#process-elements-accordion" href="#process-elements-collapse-connectors">
                            <h4><?php echo $this->translate('Connectors')?></h4>
                        </a>
                    </div>
                    <div id="process-elements-collapse-connectors" class="accordion-body collapse">
                        <div class="accordion-inner">
                            <ul class="nav nav-pills nav-stacked preconfigured-connectors-list">
                                <li each="{ connector in context.app.connectors }"
                                    data-processingid="{ connector.id }"
                                    data-element-type="connector"
                                    data-ui-metadata-riot-tag="{ connector.ui_metadata_riot_tag }"
                                    ><a href="">{ connector.name }</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function (context) {

        var self = this;
        this.context = context;


        if (! context.isNew) {
            _workflow = _.findWhere(context.app.workflows, {id : context.workflowId});

            if (!_.isEmpty(_workflow)) {
                this.start_message = _workflow.start_message;
            }
        }

        this.isProcessTabActive = function () {
            return ! self.isElementsTabActive();
        }

        this.isElementsTabActive = function () {
            return $(self.root).find(".elements-tab").parent().hasClass("active");
        }

        this.toggleActive = function (e) {
            $(self.root).find(".process-tab").parent().toggleClass("active");
            $(self.root).find(".elements-tab").parent().toggleClass("active");
            //@TODO Find a better way of handling new riot.js if behaviour
            self.update();
            self.init();
        }

        this.init = function () {
            $(self.root).find('.preconfigured-connectors-list li').draggable({
                appendTo : "body",
                helper : "clone"
            }).click(function(e) {
                e.preventDefault();
            });

            $("#pm-publish-workflow").click(function () {
                context.app.trigger("publishWorkflow");
            });

            $("#pm-load-log").click(function () {
            });
        }

        this.onWorkflowWasPublished = function (event) {
            console.log("Workflow was published: ", event);
        }

        this.on("mount", function () {
            self.init();
            self.update();
            context.app.on("workflowWasPublished", self.onWorkflowWasPublished);
        })

        this.on("unmount", function () {
            context.app.off("workflowWasPublished", self.onWorkflowWasPublished);
        })
    }
</script>